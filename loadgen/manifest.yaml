dist:
  module: github.com/open-telemetry/opentelemetry-collector # the module name for the new distribution, following Go mod conventions. Optional, but recommended.
  name: loadgencol # the binary name. Optional.
  description: "Custom OpenTelemetry Collector distribution for loadgen" # a long name for the application. Optional.
  output_path: ./_loadgenbuild/ # the path to write the output (sources and binary). Optional.
  version: "1.0.0" # the version for your custom OpenTelemetry Collector. Optional.
#  go: "/usr/bin/go" # which Go binary to use to compile the generated sources. Optional.
#  debug_compilation: false # enabling this causes the builder to keep the debug symbols in the resulting binary. Optional.
exporters:
  - gomod: go.opentelemetry.io/collector/exporter/otlpexporter v0.114.0
  - gomod: go.opentelemetry.io/collector/exporter/debugexporter v0.114.0
processors:
  - gomod: github.com/open-telemetry/opentelemetry-collector-contrib/processor/transformprocessor v0.114.0
  - gomod: github.com/elastic/opentelemetry-collector-components/processor/ratelimitprocessor v0.0.0
    path: ../processor/ratelimitprocessor
receivers:
  - gomod: github.com/open-telemetry/opentelemetry-collector-contrib/receiver/otlpjsonfilereceiver v0.114.0
replaces:
#  # a list of "replaces" directives that will be part of the resulting go.mod
#  - github.com/open-telemetry/opentelemetry-collector-contrib/internal/common => github.com/open-telemetry/opentelemetry-collector-contrib/internal/common v0.40.0
#  - go.opentelemetry.io/collector/exporter => /home/carson/projects/opentelemetry-collector/exporter
